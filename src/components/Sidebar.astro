---
import getSiteData from '../data/sites.ts';

interface Props {
  activeSites: Record<string, any>;
}

const activeSites = getSiteData();

const DEFAULT_MAIN_CATEGORY = "优质网站";
const DEFAULT_SUB_CATEGORY = "常用网站";
const websiteName = import.meta.env.PUBLIC_WEBSITE_NAME;


// 定义分类图标映射
const CATEGORY_ICONS = {
  "实用工具": {
    path: "M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z",
    title: "实用工具图标"
  },
  "优质网站": {
    path: "M15.042 21.672 13.684 16.6m0 0-2.51 2.225.569-9.47 5.227 7.917-3.286-.672Zm-7.518-.267A8.25 8.25 0 1 1 20.25 10.5M8.288 14.212A5.25 5.25 0 1 1 17.25 10.5",
    title: "优质网站图标"
  },
  "代码托管与开发": {
    path: "  m6.75 7.5 3 2.25-3 2.25m4.5 0h3m-9 8.25h13.5A2.25 2.25 0 0 0 21 18V6a2.25 2.25 0 0 0-2.25-2.25H5.25A2.25 2.25 0 0 0 3 6v12a2.25 2.25 0 0 0 2.25 2.25Z",
    title: "代码托管与开发图标"
  },
  "AI 工具": {
    path: "M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z",
    title: "AI 工具图标"
  },
  "TVBox 接口网站": {
    path: "M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 0 1-1.125-1.125M3.375 19.5h1.5C5.496 19.5 6 18.996 6 18.375m-3.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-1.5A1.125 1.125 0 0 1 18 18.375M20.625 4.5H3.375m17.25 0c.621 0 1.125.504 1.125 1.125M20.625 4.5h-1.5C18.504 4.5 18 5.004 18 5.625m3.75 0v1.5c0 .621-.504 1.125-1.125 1.125M3.375 4.5c-.621 0-1.125.504-1.125 1.125M3.375 4.5h1.5C5.496 4.5 6 5.004 6 5.625m-3.75 0v1.5c0 .621.504 1.125 1.125 1.125m0 0h1.5m-1.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m1.5-3.75C5.496 8.25 6 7.746 6 7.125v-1.5M4.875 8.25C5.496 8.25 6 8.754 6 9.375v1.5m0-5.25v5.25m0-5.25C6 5.004 6.504 4.5 7.125 4.5h9.75c.621 0 1.125.504 1.125 1.125m1.125 2.625h1.5m-1.5 0A1.125 1.125 0 0 1 18 7.125v-1.5m1.125 2.625c-.621 0-1.125.504-1.125 1.125v1.5m2.625-2.625c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125M18 5.625v5.25M7.125 12h9.75m-9.75 0A1.125 1.125 0 0 1 6 10.875M7.125 12C6.504 12 6 12.504 6 13.125m0-2.25C6 11.496 5.496 12 4.875 12M18 10.875c0 .621-.504 1.125-1.125 1.125M18 10.875c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125m-12 5.25v-5.25m0 5.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125m-12 0v-1.5c0-.621-.504-1.125-1.125-1.125M18 18.375v-5.25m0 5.25v-1.5c0-.621.504-1.125 1.125-1.125M18 13.125v1.5c0 .621.504 1.125 1.125 1.125M18 13.125c0-.621.504-1.125 1.125-1.125M6 13.125v1.5c0 .621-.504 1.125-1.125 1.125M6 13.125C6 12.504 5.496 12 4.875 12m-1.5 0h1.5m-1.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125M19.125 12h1.5m0 0c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h1.5m14.25 0h1.5",
    title: "TVBox 接口网站"
  },
  "在线影视网站": {
    path: "M6 20.25h12m-7.5-3v3m3-3v3m-10.125-3h17.25c.621 0 1.125-.504 1.125-1.125V4.875c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125Z",
    title: "在线影视网站"
  },
  "书籍资料查询网站": {
    path: "M12 6.042A8.967 8.967 0 0 0 6 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 0 1 6 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 0 1 6-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0 0 18 18a8.967 8.967 0 0 0-6 2.292m0-14.25v14.25",
    title: "书籍资料查询网站图标"
  }
};

// 获取分类图标
function getCategoryIcon(category: string) {
  return CATEGORY_ICONS[category] || {
    path: "M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z",
    title: "默认图标"
  };
}
---

<aside class="w-64 bg-gradient-to-b from-white to-gray-50 border-r border-gray-200 flex flex-col h-full animate__animated animate__fadeInLeft shadow-lg">
  <div class="p-4 border-b border-gray-200 bg-white/80 backdrop-blur-sm">
    <div class="flex items-center gap-3 logo-container">
      <div class="logo-wrapper p-1.5 rounded-lg bg-gradient-to-br from-blue-500/20 to-indigo-500/20">
        <img src="/logo.svg" alt="logo" class="w-8 h-8 logo-spin" />
      </div>
      <h2 class="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-indigo-600">
        <a href="/">{websiteName}</a>
      </h2>
    </div>
  </div>

  <nav class="flex-1 overflow-y-auto custom-scrollbar">
    <div class="space-y-2 p-4">
      {
        Object.entries(activeSites).map(([mainCategory, subCategories], index) => (
          <div 
            class="category-item animate__animated animate__fadeInUp bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-300" 
            style={`animation-delay: ${index * 0.1}s`}
          >
            <button
              class="w-full flex items-center justify-between p-3 rounded-lg font-medium category-button group transition-all duration-300"
              data-category={mainCategory}
            >
              <span class="category-text flex items-center gap-2">
                <svg 
                  class="w-5 h-5 category-icon" 
                  fill="none" 
                  stroke="currentColor" 
                  viewBox="0 0 24 24"
                  aria-hidden="true"
                >
                  <title>{getCategoryIcon(mainCategory).title}</title>
                  <path 
                    stroke-linecap="round" 
                    stroke-linejoin="round" 
                    stroke-width="2" 
                    d={getCategoryIcon(mainCategory).path}
                  />
                </svg>
                {mainCategory}
              </span>
              <span class={`transform transition-transform duration-300 arrow-icon ${mainCategory === DEFAULT_MAIN_CATEGORY ? 'rotate-180' : ''}`}>
                <svg class="w-4 h-4 text-gray-400 group-hover:text-blue-500 transition-colors duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
              </span>
            </button>
            
            <div class={`sites-list pl-4 pr-2 space-y-1 transition-all duration-300 ease-in-out ${mainCategory === DEFAULT_MAIN_CATEGORY ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0 overflow-hidden'}`}>
              {
                Object.entries(subCategories).map(([subCategory, sites], subIndex) => (
                  <div 
                    class="sub-category-item" 
                    style={`animation-delay: ${(index + subIndex) * 0.1}s`}
                  >
                    <button
                      class={`w-full flex items-center justify-between p-2.5 rounded-md text-sm transition-all duration-300 hover:bg-blue-50/50 group ${
                        mainCategory === DEFAULT_MAIN_CATEGORY && subCategory === DEFAULT_SUB_CATEGORY ? 'bg-blue-50 text-blue-600 shadow-sm' : 'text-gray-600'
                      }`}
                      data-main-category={mainCategory}
                      data-sub-category={subCategory}
                    >
                      <span class="flex items-center">
                        <span class="w-1.5 h-1.5 rounded-full bg-gray-300 group-hover:bg-blue-500 mr-2 transition-all duration-300 group-hover:scale-110"></span>
                        {subCategory}
                      </span>
                    </button>
                  </div>
                ))
              }
            </div>
          </div>
        ))
      }
    </div>
  </nav>
</aside>

<style>
  /* Logo 动画 */
  .logo-wrapper {
    position: relative;
    overflow: hidden;
  }

  .logo-wrapper::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      45deg,
      transparent 0%,
      rgba(255, 255, 255, 0.4) 50%,
      transparent 100%
    );
    transform: rotate(45deg);
    animation: shine 3s infinite;
  }

  .logo-spin {
    transition: transform 0.6s cubic-bezier(0.45, 0, 0.55, 1);
    will-change: transform;
  }
  
  .logo-container:hover .logo-spin {
    transform: rotate(360deg) scale(1.1);
  }

  /* 自定义滚动条 */
  .custom-scrollbar {
    scrollbar-width: thin;
    scrollbar-color: rgba(99, 102, 241, 0.3) transparent;
  }

  .custom-scrollbar::-webkit-scrollbar {
    width: 5px;
  }

  .custom-scrollbar::-webkit-scrollbar-track {
    background: transparent;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb {
    background-color: rgba(99, 102, 241, 0.3);
    border-radius: 3px;
    transition: background-color 0.3s;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background-color: rgba(99, 102, 241, 0.5);
  }

  /* 分类文字渐变效果 */
  .category-text {
    background-size: 200% 100%;
    background-position: 100%;
    transition: all 0.3s ease;
  }

  .category-button:hover .category-text {
    background-position: 0%;
    color: #4F46E5;
  }

  .category-icon {
    color: #6366F1;
    transition: transform 0.3s ease;
  }

  .category-button:hover .category-icon {
    transform: scale(1.1) rotate(-10deg);
  }

  /* 箭头图标动画 */
  .arrow-icon {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .category-button:hover .arrow-icon {
    transform: translateX(2px) rotate(-180deg);
  }

  /* 子分类展开/折叠动画 */
  .sites-list {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* 闪光动画 */
  @keyframes shine {
    0% {
      transform: translateX(-100%) rotate(45deg);
    }
    100% {
      transform: translateX(100%) rotate(45deg);
    }
  }

  /* 波纹效果 */
  .ripple {
    position: absolute;
    border-radius: 50%;
    transform: scale(0);
    animation: ripple 0.6s linear;
    background-color: rgba(99, 102, 241, 0.2);
  }

  @keyframes ripple {
    to {
      transform: scale(4);
      opacity: 0;
    }
  }
</style>

<script>
  // 处理主分类的展开/折叠
  const categoryButtons = document.querySelectorAll('.category-item > button');
  categoryButtons.forEach(button => {
    button.addEventListener('click', () => {
      const categoryItem = button.closest('.category-item');
      const sitesList = categoryItem?.querySelector('.sites-list');
      const arrow = button.querySelector('.arrow-icon');
      
      if (sitesList && arrow) {
        if (sitesList.classList.contains('max-h-0')) {
          // 关闭其他所有展开的列表
          document.querySelectorAll('.sites-list').forEach(list => {
            if (list !== sitesList) {
              list.classList.remove('max-h-96', 'opacity-100');
              list.classList.add('max-h-0', 'opacity-0');
              const otherArrow = list.closest('.category-item')?.querySelector('.arrow-icon');
              otherArrow?.classList.remove('rotate-180');
            }
          });
          
          sitesList.classList.remove('max-h-0', 'opacity-0');
          sitesList.classList.add('max-h-96', 'opacity-100');
          arrow.classList.add('rotate-180');
        } else {
          sitesList.classList.remove('max-h-96', 'opacity-100');
          sitesList.classList.add('max-h-0', 'opacity-0');
          arrow.classList.remove('rotate-180');
        }
      }
    });
  });

  // 处理子分类的点击
  const subCategoryButtons = document.querySelectorAll('.sub-category-item > button');
  subCategoryButtons.forEach(button => {
    button.addEventListener('click', (e: MouseEvent) => {
      // 添加点击波纹效果
      const rect = button.getBoundingClientRect();
      const ripple = document.createElement('div');
      ripple.className = 'ripple';
      ripple.style.left = `${e.clientX - rect.left}px`;
      ripple.style.top = `${e.clientY - rect.top}px`;
      button.appendChild(ripple);
      
      // 移除所有子分类的活动状态
      subCategoryButtons.forEach(btn => {
        btn.classList.remove('bg-blue-50', 'text-blue-600', 'shadow-sm');
      });
      
      // 添加当前子分类的活动状态
      button.classList.add('bg-blue-50', 'text-blue-600', 'shadow-sm');

      // 触发自定义事件
      const mainCategory = button.getAttribute('data-main-category');
      const subCategory = button.getAttribute('data-sub-category');
      
      const event = new CustomEvent('siteTypeChange', {
        detail: {
          mainCategory,
          subCategory
        }
      });
      window.dispatchEvent(event);

      // 移除波纹效果
      setTimeout(() => {
        ripple.remove();
      }, 600);
    });
  });

  // 在页面加载时触发默认分类的事件
  window.addEventListener('load', () => {
    const event = new CustomEvent('siteTypeChange', {
      detail: {
        mainCategory: "优质网站",
        subCategory: "常用网站"
      }
    });
    window.dispatchEvent(event);
  });
</script>